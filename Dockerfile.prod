# 生产环境 Dockerfile
FROM node:18-alpine AS builder

# 设置工作目录
WORKDIR /app

# 安装系统依赖
RUN apk add --no-cache \
    python3 \
    make \
    g++ \
    cairo-dev \
    jpeg-dev \
    pango-dev \
    musl-dev \
    giflib-dev \
    pixman-dev \
    pangomm-dev \
    libjpeg-turbo-dev \
    freetype-dev

# 复制 package 文件
COPY package*.json ./

# 安装依赖（只安装生产依赖）
RUN npm ci --only=production && npm cache clean --force

# 复制应用代码
COPY . .

# 创建非 root 用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S deep360 -u 1001

# 创建必要的目录并设置权限
RUN mkdir -p logs uploads plugins/temp plugins/installed plugins/configs && \
    chown -R deep360:nodejs /app && \
    chmod -R 755 /app

# 生产环境镜像
FROM node:18-alpine AS production

# 设置环境变量
ENV NODE_ENV=production
ENV NPM_CONFIG_LOGLEVEL=warn

# 安装运行时依赖
RUN apk add --no-cache \
    cairo \
    jpeg \
    pango \
    musl \
    giflib \
    pixman \
    pangomm \
    libjpeg-turbo \
    freetype \
    dumb-init \
    curl

# 创建应用目录
WORKDIR /app

# 创建非 root 用户
RUN addgroup -g 1001 -S nodejs && \
    adduser -S deep360 -u 1001

# 从 builder 阶段复制文件
COPY --from=builder --chown=deep360:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=deep360:nodejs /app/package*.json ./
COPY --chown=deep360:nodejs . .

# 创建必要的目录
RUN mkdir -p logs uploads plugins/temp plugins/installed plugins/configs && \
    chown -R deep360:nodejs /app && \
    chmod -R 755 /app

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD node healthcheck.js

# 切换到非 root 用户
USER deep360

# 暴露端口
EXPOSE 3000

# 使用 dumb-init 作为 PID 1
ENTRYPOINT ["dumb-init", "--"]

# 启动应用
CMD ["node", "server.js"]